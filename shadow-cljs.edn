;; shadow-cljs configuration
{:source-paths ["src/main"]

 :nrepl {:port 8451}

 :dependencies
 [;; ClojureScript libraries
  [cljs-http "0.1.46"] ; HTTP for cljs https://github.com/r0man/cljs-http
  [binaryage/oops "0.7.0"]  ; ClojureScript macros for convenient native Javascript object access. https://github.com/binaryage/cljs-oops

  ;; Library for OC projects https://github.com/open-company/open-company-lib
  [open-company/lib "0.17.29-alpha50" :excludes [amazonica liberator http-kit ring/ring-codec com.stuartsierra/component clj-time]]
  ;; In addition to common functions, brings in the following common dependencies used by this project:
  ;; defun - Erlang-esque pattern matching for Clojure functions https://github.com/killme2008/defun
  ;; if-let - More than one binding for if/when macros https://github.com/LockedOn/if-let
  ;; Timbre - Pure Clojure/Script logging library https://github.com/ptaoussanis/timbre
  ;; environ - Get environment settings from different sources https://github.com/weavejester/environ
  ;; hickory - HTML as data https://github.com/davidsantiago/hickory
  ;; cljs-time - clj-time inspired date library for clojurescript. https://github.com/andrewmcveigh/cljs-time
  ;; com.taoensso/sente - WebSocket client https://github.com/ptaoussanis/sente

  ;; Dev dependencies
  ^:dev [binaryage/devtools "1.0.2"]
  ^:dev [djblue/portal "0.4.0"]]

 :builds ;; Electron app
 {:desktopapp {:target :node-script
               :devtools {:ignore-warnings true
                              ;; :before-load oc.web.core/on-js-reload
                          :repl-pprint true
                          :repl-init-ns oc.electron.main}
                  ;;  :modules {:oc {:init-fn oc.electron.main/init}}
               :dev {:compiler-options {:optimizations :none
                                        :source-map true
                                        :source-map-include-sources-content true
                                        :source-map-detail-level :simple
                                        :closure-defines {oc.electron.main/dev?        true
                                                          oc.electron.main/sentry-environment "local"
                                                          oc.electron.main/web-origin  "http://localhost:3559"
                                                          oc.electron.main/auth-origin "http://localhost:3003"
                                                          oc.electron.main/sentry-dsn  "https://ecf4ef8092ae4638bf56c0cfa6d50bb0@o23653.ingest.sentry.io/4944452"}}}
               :repl-pprint true
               :compiler-options {:infer-externs :auto
                                  :closure-defines {oc.electron.main/dev? false}}
               :output-to "index.js"
               :output-dir "public"
               :asset-path "js/"
               :main oc.electron.main/init
               :entries [oc.electron.main]
               :release {:compiler-options {:optimizations :advanced
                                            :source-map true
                                            :source-map-include-sources-content true
                                            :source-map-detail-level :symbols
                                            :closure-defines {oc.electron.main/sentry-environment "staging"
                                                              oc.electron.main/web-origin  "https://staging.carrot.io"
                                                              oc.electron.main/auth-origin "https://staging-auth.carrot.io"
                                                              oc.electron.main/sentry-dsn  "https://d4318ef3fbba49668211f37c56157a19@sentry.io/1509179"}}}}}}
